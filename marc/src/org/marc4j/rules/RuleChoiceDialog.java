/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.marc4j.rules;

import javax.swing.JFrame;
import org.marc4j.rules.Globals;
import org.marc4j.rules.Rule;
import org.marc4j.rules.RuleSet;

/**
 *
 * @author levenick
 */
public class RuleChoiceDialog extends javax.swing.JDialog {

    RuleSet theRuleSet;
    private Rule chosenRule;

    public RuleChoiceDialog(RuleSet theRuleSet) {
        this(new JFrame(), true);
        theRest(theRuleSet);
    }

    private void theRest(RuleSet theRuleSet) {
        chosenRule = theRuleSet.get(0);
        this.theRuleSet = theRuleSet;
        setTitle("" + theRuleSet.getInputFileName());
        initRuleList();
        setSize(900, 800);
        setVisible(true);
    }

    public RuleChoiceDialog(RuleSet theRuleSet, boolean b) {
        this(new JFrame(), b);
        theRest(theRuleSet);
    }

    private void initRuleList() {
        theRuleList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = createRuleList();

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }

            private String[] createRuleList() {
                int size = theRuleSet.size();
                String[] returnMe = new String[size];

                int i = 0;
                for (Rule nextRule : theRuleSet) {
                    returnMe[i] = nextRule.toStringBrief();
                    i++;
                }

                return returnMe;
            }
        });
    }

    /**
     * Creates new form RuleChoiceDialog
     */
    public RuleChoiceDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        theRuleList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        theTA = new javax.swing.JTextArea();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        theRuleList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "gah", "fah", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        theRuleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        theRuleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                theRuleListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(theRuleList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 30, 720, 140);

        theTA.setColumns(20);
        theTA.setRows(5);
        jScrollPane2.setViewportView(theTA);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(80, 200, 710, 440);

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });
        getContentPane().add(doneButton);
        doneButton.setBounds(350, 0, 77, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void theRuleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_theRuleListValueChanged
        System.out.println("theRuleList.selectedItem = " + theRuleList.getSelectedIndex());
        chosenRule = theRuleSet.get(theRuleList.getSelectedIndex());
        theTA.setText(chosenRule.toString());
    }//GEN-LAST:event_theRuleListValueChanged

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RuleChoiceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RuleChoiceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RuleChoiceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RuleChoiceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RuleChoiceDialog dialog = new RuleChoiceDialog(new RuleSet(Rule.class.getResourceAsStream("resources/MovingImageFormats.csv")));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                dialog.setVisible(true);
                Rule theRule = dialog.getChosenRule();
                System.out.println("theRule = " + theRule);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList theRuleList;
    private javax.swing.JTextArea theTA;
    // End of variables declaration//GEN-END:variables

    public Rule getChosenRule() {
        return chosenRule;
    }
}
